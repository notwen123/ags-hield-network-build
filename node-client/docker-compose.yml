version: '3.8'

services:
  dagshield-node:
    build: .
    container_name: dagshield-node
    restart: unless-stopped
    ports:
      - "9000:9000"  # P2P networking
      - "9090:9090"  # Metrics
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./config:/app/config
    environment:
      - RUST_LOG=info
      - DAGSHIELD_PRIVATE_KEY=${DAGSHIELD_PRIVATE_KEY}
      - DAGSHIELD_RPC_URL=${DAGSHIELD_RPC_URL:-http://localhost:8545}
    networks:
      - dagshield-network
    depends_on:
      - prometheus
      - grafana

  prometheus:
    image: prom/prometheus:latest
    container_name: dagshield-prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - dagshield-network

  grafana:
    image: grafana/grafana:latest
    container_name: dagshield-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=dagshield123
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - dagshield-network

volumes:
  prometheus_data:
  grafana_data:

networks:
  dagshield-network:
    driver: bridge
